(set-logic NRA)
(declare-fun a () Real)
(declare-fun b () Real)
(declare-fun c () Real)
(assert (exists ((y Real)) (exists ((x Real)) (and (=  (+ (+ (* b (* b (* b (* b (+ 1 (* a (* a (+ (- 2) (* a a))))))))) (* c (* c (+ (* b (* b (* b (* b (+ (- 2) (* a (* a (- 2)))))))) (* c (* c (* b (* b (* b b))))))))) (* y (* y (+ (+ (* b (* b (+ (* a (* a (+ 2 (* a (* a (- 2)))))) (* b (* b (+ (- 2) (* a (* a 2)))))))) (* c (* c (* b (* b (+ (* a (* a 2)) (* b (* b 2)))))))) (* y (* y (+ (* a (* a (* a a))) (* b (* b (+ (* a (* a (- 2))) (* b b))))))))))) 0) (=  (+ (+ (+ (* b (* b (+ 1 (* a (* a (+ (- 2) (* a a))))))) (* c (* c (+ (* b (* b (+ (- 2) (* a (* a (- 2)))))) (* c (* c (* b b))))))) (* y (* y (+ (+ (+ (* a (* a (+ 1 (* a (* a (- 1)))))) (* b (* b (+ (- 2) (* a (* a 2)))))) (* c (* c (+ (* a a) (* b (* b 2)))))) (* y (* y (+ (* a (* a (- 1))) (* b b)))))))) (* x (* y (* y (* c (* a (* a 2))))))) 0) (=  (+ (+ (* c (+ (* b (* b (+ 3 (* a a)))) (* c (* c (* b (* b (- 1))))))) (* y (* y (* c (+ (* a (* a (- 1))) (* b (* b (- 3)))))))) (* x (+ (* b (* b (+ (- 2) (* a (* a 2))))) (* y (* y (+ (* a (* a (- 2))) (* b (* b 2)))))))) 0) (=  (+ (+ (+ (* b (* b (+ (- 1) (* a a)))) (* c (* c (* b (* b (- 1)))))) (* y (* y (+ (* a (* a (- 1))) (* b b))))) (* x (* c (* b (* b 2))))) 0) (=  (+ (+ (- 1) (* y y)) (* x x)) 0) (>  a 0) (<  (+ (- 1) a) 0) (>  b 0) (<  (+ (- 1) b) 0) (>=  c 0) (<  (+ (- 1) c) 0)))))
(apply qe)
