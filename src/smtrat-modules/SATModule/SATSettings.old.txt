// MCSAT

struct SATSettingsMCSATFMVSOC : SATSettingsMCSAT {
    static constexpr auto muduleName = "SATModule<MCSATFMVSOC>";
    using MCSATSettings = mcsat::MCSATSettingsFMVSOC;
};

struct SATSettingsMCSATFMNL : SATSettingsMCSAT {
    static constexpr auto moduleName = "SATModule<MCSATFMNL>";
    using MCSATSettings = mcsat::MCSATSettingsFMNL;
};
struct SATSettingsMCSATVSNL : SATSettingsMCSAT {
    static constexpr auto moduleName = "SATModule<MCSATVSNL>";
    using MCSATSettings = mcsat::MCSATSettingsVSNL;
};
struct SATSettingsMCSATFMVSNL : SATSettingsMCSAT {
    static constexpr auto moduleName = "SATModule<MCSATFMVSNL>";
    using MCSATSettings = mcsat::MCSATSettingsFMVSNL;
};
struct SATSettingsMCSATICPNL : SATSettingsMCSAT {
    static constexpr auto moduleName = "SATModule<MCSATICPNL>";
    using MCSATSettings = mcsat::MCSATSettingsICPNL;
};

// Levelwise

struct SATSettingsMCSATOCNN : SATSettingsMCSAT {
    static constexpr auto muduleName = "SATModule<MCSATOCNN>";
    using MCSATSettings = mcsat::MCSATSettingsOCNN;
};

struct SATSettingsMCSATOCNNASC : SATSettingsMCSAT {
	static constexpr auto muduleName = "SATModule<MCSATOCNNASC>";
	using MCSATSettings = mcsat::MCSATSettingsOCNNASC;
};
struct SATSettingsMCSATOCNNDSC : SATSettingsMCSAT {
    static constexpr auto muduleName = "SATModule<MCSATOCNNDSC>";
    using MCSATSettings = mcsat::MCSATSettingsOCNNDSC;
};
struct SATSettingsMCSATOCLWH11 : SATSettingsMCSAT {
	static constexpr auto muduleName = "SATModule<MCSATOCLWH11>";
	using MCSATSettings = mcsat::MCSATSettingsOCLWH11;
};
struct SATSettingsMCSATOCLWH12 : SATSettingsMCSAT {
	static constexpr auto muduleName = "SATModule<MCSATOCLWH12>";
	using MCSATSettings = mcsat::MCSATSettingsOCLWH12;
};
struct SATSettingsMCSATOCLWH13 : SATSettingsMCSAT {
	static constexpr auto muduleName = "SATModule<MCSATOCLWH13>";
	using MCSATSettings = mcsat::MCSATSettingsOCLWH13;
};
struct SATSettingsMCSATOCLWH21 : SATSettingsMCSAT {
	static constexpr auto muduleName = "SATModule<MCSATOCLWH21>";
	using MCSATSettings = mcsat::MCSATSettingsOCLWH21;
};
struct SATSettingsMCSATOCLWH22 : SATSettingsMCSAT {
	static constexpr auto muduleName = "SATModule<MCSATOCLWH22>";
	using MCSATSettings = mcsat::MCSATSettingsOCLWH22;
};
struct SATSettingsMCSATOCLWH23 : SATSettingsMCSAT {
	static constexpr auto muduleName = "SATModule<MCSATOCLWH23>";
	using MCSATSettings = mcsat::MCSATSettingsOCLWH23;
};
struct SATSettingsMCSATOCLWH31 : SATSettingsMCSAT {
	static constexpr auto muduleName = "SATModule<MCSATOCLWH31>";
	using MCSATSettings = mcsat::MCSATSettingsOCLWH31;
};
struct SATSettingsMCSATOCLWH32 : SATSettingsMCSAT {
	static constexpr auto muduleName = "SATModule<MCSATOCLWH32>";
	using MCSATSettings = mcsat::MCSATSettingsOCLWH32;
};
struct SATSettingsMCSATOCLWH33 : SATSettingsMCSAT {
	static constexpr auto muduleName = "SATModule<MCSATOCLWH33>";
	using MCSATSettings = mcsat::MCSATSettingsOCLWH33;
};
struct SATSettingsMCSATFMICPVSOCLWH11 : SATSettingsMCSAT {
    static constexpr auto muduleName = "SATModule<MCSATFMICPVSOCLWH11>";
    using MCSATSettings = mcsat::MCSATSettingsFMICPVSOCLWH11;
};
struct SATSettingsMCSATFMICPVSOCLWH12 : SATSettingsMCSAT {
    static constexpr auto muduleName = "SATModule<MCSATFMICPVSOCLWH12>";
    using MCSATSettings = mcsat::MCSATSettingsFMICPVSOCLWH12;
};
struct SATSettingsMCSATFMICPVSOCLWH13 : SATSettingsMCSAT {
	static constexpr auto muduleName = "SATModule<MCSATFMICPVSOCLWH13>";
	using MCSATSettings = mcsat::MCSATSettingsFMICPVSOCLWH13;
};
struct SATSettingsMCSATFMICPVSOCNNASC : SATSettingsMCSAT {
    static constexpr auto muduleName = "SATModule<MCSATFMICPVSOCNNASC>";
    using MCSATSettings = mcsat::MCSATSettingsFMICPVSOCNNASC;
};
struct SATSettingsMCSATFMICPVSOCNNDSC : SATSettingsMCSAT {
    static constexpr auto muduleName = "SATModule<MCSATFMICPVSOCNNDSC>";
    using MCSATSettings = mcsat::MCSATSettingsFMICPVSOCNNDSC;
};
struct SATSettingsMCSATFMICPVSOCPARALLEL : SATSettingsMCSAT {
    static constexpr auto muduleName = "SATModule<MCSATFMICPVSOCPARALLEL>";
    using MCSATSettings = mcsat::MCSATSettingsFMICPVSOCPARALLEL;
};
struct SATSettingsMCSATOCPARALLEL : SATSettingsMCSAT {
    static constexpr auto muduleName = "SATModule<MCSATOCPARALLEL>";
    using MCSATSettings = mcsat::MCSATSettingsOCPARALLEL;
};



// Variable ordering heuristics

struct BaseSATSettings_MCSAT : SATSettings1 {
    static constexpr bool mc_sat = true;
};
struct SATSettings_MCSAT_AF_FMOCNL_TF : BaseSATSettings_MCSAT {
    static constexpr auto moduleName = "SATModule<MCSATAFFMOCNLTF>";
    using MCSATSettings = mcsat::MCSAT_AF_FMOCNL;
    using VarScheduler = VarSchedulerMcsatTheoryFirst<TheoryVarSchedulerStatic<mcsat::VariableOrdering::FeatureBased>>;
};

struct SATSettings_MCSAT_AF_NL_TF : BaseSATSettings_MCSAT {
    static constexpr auto moduleName = "SATModule<MCSATAFNLTF>";
    using MCSATSettings = mcsat::MCSAT_AF_NL;
    using VarScheduler = VarSchedulerMcsatTheoryFirst<TheoryVarSchedulerStatic<mcsat::VariableOrdering::FeatureBased>>;
};
struct SATSettings_MCSAT_AF_OCNL_TF : BaseSATSettings_MCSAT {
    static constexpr auto moduleName = "SATModule<MCSATAFOCNLTF>";
    using MCSATSettings = mcsat::MCSAT_AF_OCNL;
    using VarScheduler = VarSchedulerMcsatTheoryFirst<TheoryVarSchedulerStatic<mcsat::VariableOrdering::FeatureBased>>;
};
struct SATSettings_MCSAT_AF_FMICPOCNL_TF : BaseSATSettings_MCSAT {
    static constexpr auto moduleName = "SATModule<MCSATAFFMICPOCNLTF>";
    using MCSATSettings = mcsat::MCSAT_AF_FMICPOCNL;
    using VarScheduler = VarSchedulerMcsatTheoryFirst<TheoryVarSchedulerStatic<mcsat::VariableOrdering::FeatureBased>>;
};
struct SATSettings_MCSAT_AF_FMICPVSOCNL_TF : BaseSATSettings_MCSAT {
    static constexpr auto moduleName = "SATModule<MCSATAFFMICPVSOCNLTF>";
    using MCSATSettings = mcsat::MCSAT_AF_FMICPVSOCNL;
    using VarScheduler = VarSchedulerMcsatTheoryFirst<TheoryVarSchedulerStatic<mcsat::VariableOrdering::FeatureBased>>;
};
struct SATSettings_MCSAT_AF_FMVSOCNL_TF : BaseSATSettings_MCSAT {
    static constexpr auto moduleName = "SATModule<MCSATAFFMVSOCNLTF>";
    using MCSATSettings = mcsat::MCSAT_AF_FMVSOCNL;
    using VarScheduler = VarSchedulerMcsatTheoryFirst<TheoryVarSchedulerStatic<mcsat::VariableOrdering::FeatureBased>>;
};

struct SATSettings_MCSAT_SMT_FMOCNL_TF : BaseSATSettings_MCSAT {
    static constexpr auto moduleName = "SATModule<MCSATSMTFMOCNLTF>";
    using MCSATSettings = mcsat::MCSAT_SMT_FMOCNL;
    using VarScheduler = VarSchedulerMcsatTheoryFirst<TheoryVarSchedulerStatic<mcsat::VariableOrdering::FeatureBased>>;
};

struct SATSettings_MCSAT_AF_FMOCNL_BF : BaseSATSettings_MCSAT {
    static constexpr auto moduleName = "SATModule<MCSATAFFMOCNLBF>";
    using MCSATSettings = mcsat::MCSAT_AF_FMOCNL;
    using VarScheduler = VarSchedulerMcsatBooleanFirst<mcsat::VariableOrdering::FeatureBased>;
};
struct SATSettings_MCSAT_AF_FMOCNL_RND : BaseSATSettings_MCSAT {
    static constexpr auto moduleName = "SATModule<MCSATAFFMOCNLRND>";
    using MCSATSettings = mcsat::MCSAT_AF_FMOCNL;
    using VarScheduler = VarSchedulerFixedRandom;
};
struct SATSettings_MCSAT_AF_FMOCNL_UNIFORM : BaseSATSettings_MCSAT {
    static constexpr auto moduleName = "SATModule<MCSATAFFMOCNLUNIFORM>";
    using MCSATSettings = mcsat::MCSAT_AF_FMOCNL;
    using VarScheduler = VarSchedulerMinisat;
};
struct SATSettings_MCSAT_AF_FMOCNL_UV : BaseSATSettings_MCSAT {
    static constexpr auto moduleName = "SATModule<MCSATAFFMOCNLUV>";
    using MCSATSettings = mcsat::MCSAT_AF_FMOCNL;
    using VarScheduler = VarSchedulerMcsatUnivariateConstraintsOnly<1, mcsat::VariableOrdering::FeatureBased>;
};
struct SATSettings_MCSAT_AF_FMOCNL_UVactive : BaseSATSettings_MCSAT {
    static constexpr auto moduleName = "SATModule<MCSATAFFMOCNLUVactive>";
    using MCSATSettings = mcsat::MCSAT_AF_FMOCNL;
    using VarScheduler = VarSchedulerMcsatUnivariateConstraintsOnly<1, mcsat::VariableOrdering::FeatureBased>;
    static constexpr bool check_active_literal_occurrences = true;
};
struct SATSettings_MCSAT_AF_FMOCNL_NLSAT : BaseSATSettings_MCSAT {
    static constexpr auto moduleName = "SATModule<MCSATAFFMOCNLNLSAT>";
    using MCSATSettings = mcsat::MCSAT_AF_FMOCNL;
    using VarScheduler = VarSchedulerMcsatUnivariateClausesOnly<TheoryVarSchedulerStatic<mcsat::VariableOrdering::FeatureBased>,false>;
};
struct SATSettings_MCSAT_AF_FMOCNL_TFDYN : BaseSATSettings_MCSAT {
    static constexpr auto moduleName = "SATModule<MCSATAFFMOCNLTFDYN>";
    using MCSATSettings = mcsat::MCSAT_AF_FMOCNL;
    using VarScheduler = VarSchedulerMcsatTheoryFirst<VarSchedulerMinisat>;
};
struct SATSettings_MCSAT_AF_FMOCNL_UNIFORMTF : BaseSATSettings_MCSAT {
    static constexpr auto moduleName = "SATModule<MCSATAFFMOCNLUNIFORMTF>";
    using MCSATSettings = mcsat::MCSAT_AF_FMOCNL;
    using VarScheduler = VarSchedulerMcsatActivityPreferTheory<mcsat::VariableOrdering::FeatureBased>;
};